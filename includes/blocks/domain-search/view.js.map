{"version":3,"file":"domain-search/view.js","mappings":"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","sources":["webpack://domain-search/./src/domain-search/view.js"],"sourcesContent":["console.error('<<<< VIEW.JS - LATEST VERSION LOADED >>>>'); // For deployment verification\n\n/**\n * Front-end JavaScript for the Domain Search Block.\n *\n * Handles user input, makes API requests via the WordPress REST API,\n * and displays results.\n */\n\n// Function to run for each domain search block instance on the page\nfunction initializeDomainSearchBlock(blockElement) {\n\t// Find the necessary elements within this specific block instance\n\tconst input = blockElement.querySelector('.domain-search-input');\n\tconst button = blockElement.querySelector('.domain-search-button');\n\tconst resultsContainer = blockElement.querySelector('.domain-search-results');\n\n\t// Exit if essential elements aren't found (safety check)\n\tif (!input || !button || !resultsContainer) {\n\t\tconsole.error('Domain Search Block: Missing required elements inside:', blockElement);\n\t\treturn;\n\t}\n\n\t// --- Event Listener for the Search Button ---\n\tbutton.addEventListener('click', async () => {\n\t\tconst domain = input.value.trim().toLowerCase();\n\n\t\t// --- Basic Validation ---\n\t\tif (!domain) {\n\t\t\tresultsContainer.innerHTML = '<p class=\"domain-search-error\">Please enter a domain name.</p>';\n\t\t\tinput.focus(); // Focus back on the input\n\t\t\treturn;\n\t\t}\n\t\t// Very basic domain format check (doesn't validate TLD)\n\t\tif (domain.indexOf('.') === -1 || domain.startsWith('.') || domain.endsWith('.')) {\n\t\t\tresultsContainer.innerHTML = `<p class=\"domain-search-error\">Please enter a valid domain format (e.g., example.com).</p>`;\n\t\t\tinput.focus();\n\t\t\treturn;\n\t\t}\n\n\t\t// --- Show Loading State ---\n\t\tresultsContainer.innerHTML = '<p class=\"domain-search-loading\">Checking availability...</p>';\n\t\tbutton.disabled = true; // Prevent multiple clicks\n\t\tinput.disabled = true; // Optional: disable input during search\n\n\t\t// --- Prepare API Request ---\n\t\tconst formData = new FormData();\n\t\t// 'action' is not typically used/needed for WP REST API calls like this\n\t\t// formData.append('action', 'domain_search_check');\n\t\tformData.append('domain', domain);\n\t\t// Nonce is sent via header, but can be included in body too if needed/preferred by backend logic\n\t\t// formData.append('_wpnonce', domainSearchData.nonce);\n\n\t\ttry {\n\t\t\t// --- Make the Fetch Request ---\n\t\t\tconst response = await fetch(domainSearchData.apiUrl, { // Use the API URL from PHP\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t// Let browser set Content-Type for FormData\n\t\t\t\t\t'X-WP-Nonce': domainSearchData.nonce // Standard header for REST API nonce\n\t\t\t\t},\n\t\t\t\tbody: formData // Send domain\n\t\t\t});\n\n\t\t\t// --- Get response as raw text first ---\n\t\t\tconst responseText = await response.text();\n\t\t\tconsole.log(\"<<< RAW Response Text from Server >>>:\", responseText); // Log the raw text\n\n\t\t\t// --- Check if response was ok (status 200-299) ---\n\t\t\tif (!response.ok) {\n\t\t\t\tlet errorMessage = `Error: ${response.status} ${response.statusText}`;\n\t\t\t\t// Try to parse error message from the text, but catch if it's not JSON\n\t\t\t\ttry {\n\t\t\t\t\t// Attempt to parse the text we already retrieved\n\t\t\t\t\tconst errorData = JSON.parse(responseText);\n\t\t\t\t\t// Check specifically for a message property common in WP_Error JSON responses\n\t\t\t\t\tif (errorData.message) {\n\t\t\t\t\t\terrorMessage = errorData.message; // Use the specific message from backend\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Could not parse error response body as JSON:', e);\n\t\t\t\t\t// Optionally include raw text in error if short and not HTML\n\t\t\t\t\tif (responseText && responseText.length < 100 && !responseText.trim().startsWith('<')) {\n\t\t\t\t\t\terrorMessage += ` - Server response: ${responseText}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Throw the error to be caught by the outer catch block\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\t// --- If response.ok, try to parse the text as JSON ---\n\t\t\tlet data;\n\t\t\ttry {\n\t\t\t\t// Attempt to parse the text we already retrieved\n\t\t\t\tdata = JSON.parse(responseText);\n\t\t\t\tconsole.log(\">>> Parsed JSON data >>>:\", data); // Log successfully parsed data\n\t\t\t} catch (error) {\n\t\t\t\t// If JSON parsing fails even on a 2xx response, log details and throw generic error\n\t\t\t\tconsole.error(\"JSON Parse Error on successful response:\", error);\n\t\t\t\tconsole.error(\"Raw text that failed parsing:\", responseText); // Log the text again for debug\n\t\t\t\tthrow new Error('Received an invalid format from the server.');\n\t\t\t}\n\n\t\t\t// --- Display Results (Processing Array) ---\n\t\t\tlet resultsHTML = '';\n\n\t\t\t// Check if data is an array and has items\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tresultsHTML = '<ul>'; // Start a list for the results\n\n\t\t\t\tdata.forEach(item => {\n\t\t\t\t\t// Ensure item is an object before accessing properties\n\t\t\t\t\tif (item && typeof item === 'object') {\n\t\t\t\t\t\tresultsHTML += '<li>';\n\t\t\t\t\t\t// Display domain name (escape it)\n\t\t\t\t\t\tresultsHTML += `<strong>${escapeHTML(item.domain || '')}</strong>: `;\n\n\t\t\t\t\t\t// Display status based on item.available\n\t\t\t\t\t\tif (item.available === true) {\n\t\t\t\t\t\t\tresultsHTML += '<span class=\"domain-search-success\">Available</span>';\n\t\t\t\t\t\t\t// Display price if available and valid\n\t\t\t\t\t\t\tif (item.adjusted_price && item.adjusted_price !== 'N/A') {\n\t\t\t\t\t\t\t\t// TODO: Add currency symbol from settings?\n\t\t\t\t\t\t\t\tresultsHTML += ` - $${escapeHTML(item.adjusted_price)}`;\n\t\t\t\t\t\t\t\t// TODO: Add Register button?\n\t\t\t\t\t\t\t} else if (item.adjusted_price === 'N/A') {\n\t\t\t\t\t\t\t\tresultsHTML += ' (Pricing N/A)';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresultsHTML += ' (Pricing unavailable)';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (item.available === false) {\n\t\t\t\t\t\t\tresultsHTML += '<span class=\"domain-search-unavailable\">Unavailable</span>';\n\t\t\t\t\t\t} else if (item.available === 'error') {\n\t\t\t\t\t\t\t// Use the message returned from the backend for this specific error\n\t\t\t\t\t\t\tresultsHTML += `<span class=\"domain-search-error\">Error: ${escapeHTML(item.message || 'Could not check status.')}</span>`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Fallback for truly unexpected 'available' value\n\t\t\t\t\t\t\tresultsHTML += `<span class=\"domain-search-error\">Unknown status</span>`;\n\t\t\t\t\t\t\tconsole.warn('Unexpected value for item.available in received data:', item.available);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresultsHTML += '</li>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('Received invalid item in results array:', item);\n\t\t\t\t\t}\n\t\t\t\t}); // End forEach loop\n\n\t\t\t\tresultsHTML += '</ul>'; // Close the list\n\t\t\t} else if (Array.isArray(data) && data.length === 0) {\n\t\t\t\t// Handle case where backend returned an empty array (e.g., no TLDs checked?)\n\t\t\t\tresultsHTML = '<p>No results were returned for the requested TLDs.</p>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Handle case where 'data' wasn't an array after successful parsing\n\t\t\t\tresultsHTML = '<p class=\"domain-search-error\">Received an unexpected response format from the server.</p>';\n\t\t\t\tconsole.error('Parsed data was not an array as expected:', data);\n\t\t\t}\n\n\t\t\tresultsContainer.innerHTML = resultsHTML; // Update the container with the generated list\n\n\t\t} catch (error) {\n\t\t\t// --- Handle Fetch Errors (Network issues, etc.) or Thrown Errors ---\n\t\t\tconsole.error('Domain Search Error:', error); // Log the error object\n\t\t\t// Display the specific error message property\n\t\t\tresultsContainer.innerHTML = `<p class=\"domain-search-error\">An error occurred: ${escapeHTML(error.message)}. Please try again later.</p>`;\n\t\t} finally {\n\t\t\t// --- Always Re-enable Button/Input ---\n\t\t\t// This block executes regardless of whether try succeeded or failed\n\t\t\tbutton.disabled = false;\n\t\t\tinput.disabled = false;\n\t\t}\n\t}); // End button click listener\n\n\t// Optional: Allow search on pressing Enter in the input field\n\tinput.addEventListener('keypress', (event) => {\n\t\tif (event.key === 'Enter') {\n\t\t\tevent.preventDefault(); // Prevent form submission if it were inside a form\n\t\t\tbutton.click(); // Trigger the button click handler\n\t\t}\n\t});\n\n} // End initializeDomainSearchBlock\n\n// --- Helper function to escape HTML to prevent XSS ---\n// Simple version; consider a more robust library for complex needs\nfunction escapeHTML(str) {\n\tif (typeof str !== 'string') {\n\t\tconsole.warn(\"escapeHTML called with non-string value:\", str);\n\t\treturn ''; // Return empty string for non-strings\n\t}\n\tconst div = document.createElement('div');\n\tdiv.textContent = str;\n\treturn div.innerHTML;\n}\n\n\n// --- Initialize all instances of the block on the page ---\n// Run after the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst domainSearchBlocks = document.querySelectorAll('.wp-block-create-block-domain-search');\n\tdomainSearchBlocks.forEach(initializeDomainSearchBlock);\n});\n\n// --- Handle potential dynamic loading (e.g., in Full Site Editor or with other JS frameworks) ---\n// More robust check for blocks added after initial load (optional but good practice)\nif (window.MutationObserver) {\n\tconst observer = new MutationObserver(mutationsList => {\n\t\tfor (const mutation of mutationsList) {\n\t\t\tif (mutation.type === 'childList') {\n\t\t\t\tmutation.addedNodes.forEach(node => {\n\t\t\t\t\t// Check if the added node is the block itself\n\t\t\t\t\tif (node.nodeType === 1 && node.matches('.wp-block-create-block-domain-search')) {\n\t\t\t\t\t\t// Check if it's already initialized (e.g., by DOMContentLoaded)\n\t\t\t\t\t\tif (!node.dataset.domainSearchInitialized) {\n\t\t\t\t\t\t\tinitializeDomainSearchBlock(node);\n\t\t\t\t\t\t\tnode.dataset.domainSearchInitialized = 'true'; // Mark as initialized\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Check if the added node contains the block(s)\n\t\t\t\t\telse if (node.nodeType === 1 && node.querySelector) {\n\t\t\t\t\t\tconst blocksInside = node.querySelectorAll('.wp-block-create-block-domain-search:not([data-domain-search-initialized])');\n\t\t\t\t\t\tblocksInside.forEach(block => {\n\t\t\t\t\t\t\tinitializeDomainSearchBlock(block);\n\t\t\t\t\t\t\tblock.dataset.domainSearchInitialized = 'true'; // Mark as initialized\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tobserver.observe(document.body, { childList: true, subtree: true });\n}\n"],"names":["console","error","initializeDomainSearchBlock","blockElement","input","querySelector","button","resultsContainer","addEventListener","domain","value","trim","toLowerCase","innerHTML","focus","indexOf","startsWith","endsWith","disabled","formData","FormData","append","response","fetch","domainSearchData","apiUrl","method","headers","nonce","body","responseText","text","log","ok","errorMessage","status","statusText","errorData","JSON","parse","message","e","warn","length","Error","data","resultsHTML","Array","isArray","forEach","item","escapeHTML","available","adjusted_price","event","key","preventDefault","click","str","div","document","createElement","textContent","domainSearchBlocks","querySelectorAll","window","MutationObserver","observer","mutationsList","mutation","type","addedNodes","node","nodeType","matches","dataset","domainSearchInitialized","blocksInside","block","observe","childList","subtree"],"sourceRoot":""}